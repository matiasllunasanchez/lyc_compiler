Gramática

    0 $accept: start $end

    1 start: seccion_declaracion programa

    2 seccion_declaracion: DECVAR bloque_variables ENDDEC

    3 bloque_variables: bloque_variables listavar OP_TIPO tipodato
    4                 | listavar OP_TIPO tipodato

    5 listavar: ID
    6         | listavar COMA ID

    7 tipodato: INTEGER
    8         | FLOAT
    9         | STRING

   10 programa: sentencia
   11         | programa sentencia

   12 sentencia: asignacion
   13          | iteracion
   14          | seleccion
   15          | salida
   16          | entrada

   17 asignacion: ID OP_ASIG expresion_general

   18 expresion_general: CONST_STR
   19                  | expresion

   20 expresion: expresion OP_SUM termino
   21          | expresion OP_RES termino
   22          | termino

   23 termino: termino OP_MUL factor
   24        | termino OP_DIV factor
   25        | factor

   26 factor: PAR_A expresion PAR_C
   27       | CONST_REAL
   28       | ID
   29       | CONST_ENT
   30       | take

   31 $@1: /* vacío */

   32 $@2: /* vacío */

   33 iteracion: WHILE $@1 PAR_A expresion_booleana PAR_C THEN $@2 programa ENDWHILE

   34 inicio_if: IF PAR_A

   35 inicio_then: PAR_C THEN

   36 seleccion: inicio_if expresion_booleana inicio_then programa ENDIF

   37 $@3: /* vacío */

   38 $@4: /* vacío */

   39 seleccion: inicio_if expresion_booleana inicio_then programa $@3 ELSE $@4 programa ENDIF

   40 $@5: /* vacío */

   41 $@6: /* vacío */

   42 expresion_booleana: termino_booleano $@5 AND $@6 termino_booleano

   43 $@7: /* vacío */

   44 $@8: /* vacío */

   45 expresion_booleana: termino_booleano $@7 OR $@8 termino_booleano
   46                   | termino_booleano
   47                   | NOT termino_booleano
   48                   | between

   49 termino_booleano: PAR_A expresion_booleana PAR_C

   50 $@9: /* vacío */

   51 termino_booleano: expresion $@9 comparador expresion

   52 comparador: OP_MAYOR
   53           | OP_MENOR
   54           | OP_MENOR_IGUAL
   55           | OP_MAYOR_IGUAL
   56           | OP_IGUAL
   57           | OP_NO_IGUAL

   58 entrada: READ ID

   59 salida: WRITE CONST_STR
   60       | WRITE ID

   61 funcion_expresion_cota_inferior: expresion

   62 funcion_expresion_cota_superior: expresion

   63 $@10: /* vacío */

   64 between: BETWEEN PAR_A ID $@10 COMA COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C PAR_C

   65 take: TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A lista_take_ctes COR_C PAR_C
   66     | TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A COR_C PAR_C

   67 operador_take: OP_SUM
   68              | OP_MUL
   69              | OP_DIV
   70              | OP_RES

   71 numeros_a_tomar: CONST_ENT

   72 lista_take_ctes: CONST_ENT
   73                | lista_take_ctes PYC CONST_ENT


Terminales con las reglas donde aparecen

$end (0) 0
error (256)
OP_ASIG (258) 17
OP_RES (259) 21 70
OP_SUM (260) 20 67
OP_DIV (261) 24 69
OP_MUL (262) 23 68
OP_MAYOR (263) 52
OP_MAYOR_IGUAL (264) 55
OP_MENOR (265) 53
OP_MENOR_IGUAL (266) 54
OP_IGUAL (267) 56
OP_NO_IGUAL (268) 57
OP_TIPO (269) 3 4
TAKE (270) 65 66
BETWEEN (271) 64
WHILE (272) 33
IF (273) 34
THEN (274) 33 35
INTEGER (275) 7
FLOAT (276) 8
STRING (277) 9
ELSE (278) 39
DECVAR (279) 2
ENDDEC (280) 2
AND (281) 42
OR (282) 45
NOT (283) 47
WRITE (284) 59 60
READ (285) 58
COMA (286) 6 64
ENDIF (287) 36 39
ENDWHILE (288) 33
PAR_A (289) 26 33 34 49 64 65 66
PAR_C (290) 26 33 35 49 64 65 66
COR_A (291) 64 65 66
COR_C (292) 64 65 66
PYC (293) 64 65 66 73
ID (294) 5 6 17 28 58 60 64
CONST_ENT (295) 29 71 72 73
CONST_REAL (296) 27
CONST_STR (297) 18 59


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
start (44)
    en la izquierda: 1, en la derecha: 0
seccion_declaracion (45)
    en la izquierda: 2, en la derecha: 1
bloque_variables (46)
    en la izquierda: 3 4, en la derecha: 2 3
listavar (47)
    en la izquierda: 5 6, en la derecha: 3 4 6
tipodato (48)
    en la izquierda: 7 8 9, en la derecha: 3 4
programa (49)
    en la izquierda: 10 11, en la derecha: 1 11 33 36 39
sentencia (50)
    en la izquierda: 12 13 14 15 16, en la derecha: 10 11
asignacion (51)
    en la izquierda: 17, en la derecha: 12
expresion_general (52)
    en la izquierda: 18 19, en la derecha: 17
expresion (53)
    en la izquierda: 20 21 22, en la derecha: 19 20 21 26 51 61 62
termino (54)
    en la izquierda: 23 24 25, en la derecha: 20 21 22 23 24
factor (55)
    en la izquierda: 26 27 28 29 30, en la derecha: 23 24 25
iteracion (56)
    en la izquierda: 33, en la derecha: 13
$@1 (57)
    en la izquierda: 31, en la derecha: 33
$@2 (58)
    en la izquierda: 32, en la derecha: 33
inicio_if (59)
    en la izquierda: 34, en la derecha: 36 39
inicio_then (60)
    en la izquierda: 35, en la derecha: 36 39
seleccion (61)
    en la izquierda: 36 39, en la derecha: 14
$@3 (62)
    en la izquierda: 37, en la derecha: 39
$@4 (63)
    en la izquierda: 38, en la derecha: 39
expresion_booleana (64)
    en la izquierda: 42 45 46 47 48, en la derecha: 33 36 39 49
$@5 (65)
    en la izquierda: 40, en la derecha: 42
$@6 (66)
    en la izquierda: 41, en la derecha: 42
$@7 (67)
    en la izquierda: 43, en la derecha: 45
$@8 (68)
    en la izquierda: 44, en la derecha: 45
termino_booleano (69)
    en la izquierda: 49 51, en la derecha: 42 45 46 47
$@9 (70)
    en la izquierda: 50, en la derecha: 51
comparador (71)
    en la izquierda: 52 53 54 55 56 57, en la derecha: 51
entrada (72)
    en la izquierda: 58, en la derecha: 16
salida (73)
    en la izquierda: 59 60, en la derecha: 15
funcion_expresion_cota_inferior (74)
    en la izquierda: 61, en la derecha: 64
funcion_expresion_cota_superior (75)
    en la izquierda: 62, en la derecha: 64
between (76)
    en la izquierda: 64, en la derecha: 48
$@10 (77)
    en la izquierda: 63, en la derecha: 64
take (78)
    en la izquierda: 65 66, en la derecha: 30
operador_take (79)
    en la izquierda: 67 68 69 70, en la derecha: 65 66
numeros_a_tomar (80)
    en la izquierda: 71, en la derecha: 65 66
lista_take_ctes (81)
    en la izquierda: 72 73, en la derecha: 65 73


estado 0

    0 $accept: . start $end

    DECVAR  desplazar e ir al estado 1

    start                ir al estado 2
    seccion_declaracion  ir al estado 3


estado 1

    2 seccion_declaracion: DECVAR . bloque_variables ENDDEC

    ID  desplazar e ir al estado 4

    bloque_variables  ir al estado 5
    listavar          ir al estado 6


estado 2

    0 $accept: start . $end

    $end  desplazar e ir al estado 7


estado 3

    1 start: seccion_declaracion . programa

    WHILE  desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WRITE  desplazar e ir al estado 10
    READ   desplazar e ir al estado 11
    ID     desplazar e ir al estado 12

    programa    ir al estado 13
    sentencia   ir al estado 14
    asignacion  ir al estado 15
    iteracion   ir al estado 16
    inicio_if   ir al estado 17
    seleccion   ir al estado 18
    entrada     ir al estado 19
    salida      ir al estado 20


estado 4

    5 listavar: ID .

    $default  reduce usando la regla 5 (listavar)


estado 5

    2 seccion_declaracion: DECVAR bloque_variables . ENDDEC
    3 bloque_variables: bloque_variables . listavar OP_TIPO tipodato

    ENDDEC  desplazar e ir al estado 21
    ID      desplazar e ir al estado 4

    listavar  ir al estado 22


estado 6

    4 bloque_variables: listavar . OP_TIPO tipodato
    6 listavar: listavar . COMA ID

    OP_TIPO  desplazar e ir al estado 23
    COMA     desplazar e ir al estado 24


estado 7

    0 $accept: start $end .

    $default  aceptar


estado 8

   33 iteracion: WHILE . $@1 PAR_A expresion_booleana PAR_C THEN $@2 programa ENDWHILE

    $default  reduce usando la regla 31 ($@1)

    $@1  ir al estado 25


estado 9

   34 inicio_if: IF . PAR_A

    PAR_A  desplazar e ir al estado 26


estado 10

   59 salida: WRITE . CONST_STR
   60       | WRITE . ID

    ID         desplazar e ir al estado 27
    CONST_STR  desplazar e ir al estado 28


estado 11

   58 entrada: READ . ID

    ID  desplazar e ir al estado 29


estado 12

   17 asignacion: ID . OP_ASIG expresion_general

    OP_ASIG  desplazar e ir al estado 30


estado 13

    1 start: seccion_declaracion programa .
   11 programa: programa . sentencia

    WHILE  desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WRITE  desplazar e ir al estado 10
    READ   desplazar e ir al estado 11
    ID     desplazar e ir al estado 12

    $default  reduce usando la regla 1 (start)

    sentencia   ir al estado 31
    asignacion  ir al estado 15
    iteracion   ir al estado 16
    inicio_if   ir al estado 17
    seleccion   ir al estado 18
    entrada     ir al estado 19
    salida      ir al estado 20


estado 14

   10 programa: sentencia .

    $default  reduce usando la regla 10 (programa)


estado 15

   12 sentencia: asignacion .

    $default  reduce usando la regla 12 (sentencia)


estado 16

   13 sentencia: iteracion .

    $default  reduce usando la regla 13 (sentencia)


estado 17

   36 seleccion: inicio_if . expresion_booleana inicio_then programa ENDIF
   39          | inicio_if . expresion_booleana inicio_then programa $@3 ELSE $@4 programa ENDIF

    TAKE        desplazar e ir al estado 32
    BETWEEN     desplazar e ir al estado 33
    NOT         desplazar e ir al estado 34
    PAR_A       desplazar e ir al estado 35
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion           ir al estado 39
    termino             ir al estado 40
    factor              ir al estado 41
    expresion_booleana  ir al estado 42
    termino_booleano    ir al estado 43
    between             ir al estado 44
    take                ir al estado 45


estado 18

   14 sentencia: seleccion .

    $default  reduce usando la regla 14 (sentencia)


estado 19

   16 sentencia: entrada .

    $default  reduce usando la regla 16 (sentencia)


estado 20

   15 sentencia: salida .

    $default  reduce usando la regla 15 (sentencia)


estado 21

    2 seccion_declaracion: DECVAR bloque_variables ENDDEC .

    $default  reduce usando la regla 2 (seccion_declaracion)


estado 22

    3 bloque_variables: bloque_variables listavar . OP_TIPO tipodato
    6 listavar: listavar . COMA ID

    OP_TIPO  desplazar e ir al estado 46
    COMA     desplazar e ir al estado 24


estado 23

    4 bloque_variables: listavar OP_TIPO . tipodato

    INTEGER  desplazar e ir al estado 47
    FLOAT    desplazar e ir al estado 48
    STRING   desplazar e ir al estado 49

    tipodato  ir al estado 50


estado 24

    6 listavar: listavar COMA . ID

    ID  desplazar e ir al estado 51


estado 25

   33 iteracion: WHILE $@1 . PAR_A expresion_booleana PAR_C THEN $@2 programa ENDWHILE

    PAR_A  desplazar e ir al estado 52


estado 26

   34 inicio_if: IF PAR_A .

    $default  reduce usando la regla 34 (inicio_if)


estado 27

   60 salida: WRITE ID .

    $default  reduce usando la regla 60 (salida)


estado 28

   59 salida: WRITE CONST_STR .

    $default  reduce usando la regla 59 (salida)


estado 29

   58 entrada: READ ID .

    $default  reduce usando la regla 58 (entrada)


estado 30

   17 asignacion: ID OP_ASIG . expresion_general

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38
    CONST_STR   desplazar e ir al estado 54

    expresion_general  ir al estado 55
    expresion          ir al estado 56
    termino            ir al estado 40
    factor             ir al estado 41
    take               ir al estado 45


estado 31

   11 programa: programa sentencia .

    $default  reduce usando la regla 11 (programa)


estado 32

   65 take: TAKE . PAR_A operador_take PYC numeros_a_tomar PYC COR_A lista_take_ctes COR_C PAR_C
   66     | TAKE . PAR_A operador_take PYC numeros_a_tomar PYC COR_A COR_C PAR_C

    PAR_A  desplazar e ir al estado 57


estado 33

   64 between: BETWEEN . PAR_A ID $@10 COMA COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C PAR_C

    PAR_A  desplazar e ir al estado 58


estado 34

   47 expresion_booleana: NOT . termino_booleano

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 35
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion         ir al estado 39
    termino           ir al estado 40
    factor            ir al estado 41
    termino_booleano  ir al estado 59
    take              ir al estado 45


estado 35

   26 factor: PAR_A . expresion PAR_C
   49 termino_booleano: PAR_A . expresion_booleana PAR_C

    TAKE        desplazar e ir al estado 32
    BETWEEN     desplazar e ir al estado 33
    NOT         desplazar e ir al estado 34
    PAR_A       desplazar e ir al estado 35
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion           ir al estado 60
    termino             ir al estado 40
    factor              ir al estado 41
    expresion_booleana  ir al estado 61
    termino_booleano    ir al estado 43
    between             ir al estado 44
    take                ir al estado 45


estado 36

   28 factor: ID .

    $default  reduce usando la regla 28 (factor)


estado 37

   29 factor: CONST_ENT .

    $default  reduce usando la regla 29 (factor)


estado 38

   27 factor: CONST_REAL .

    $default  reduce usando la regla 27 (factor)


estado 39

   20 expresion: expresion . OP_SUM termino
   21          | expresion . OP_RES termino
   51 termino_booleano: expresion . $@9 comparador expresion

    OP_RES  desplazar e ir al estado 62
    OP_SUM  desplazar e ir al estado 63

    $default  reduce usando la regla 50 ($@9)

    $@9  ir al estado 64


estado 40

   22 expresion: termino .
   23 termino: termino . OP_MUL factor
   24        | termino . OP_DIV factor

    OP_DIV  desplazar e ir al estado 65
    OP_MUL  desplazar e ir al estado 66

    $default  reduce usando la regla 22 (expresion)


estado 41

   25 termino: factor .

    $default  reduce usando la regla 25 (termino)


estado 42

   36 seleccion: inicio_if expresion_booleana . inicio_then programa ENDIF
   39          | inicio_if expresion_booleana . inicio_then programa $@3 ELSE $@4 programa ENDIF

    PAR_C  desplazar e ir al estado 67

    inicio_then  ir al estado 68


estado 43

   42 expresion_booleana: termino_booleano . $@5 AND $@6 termino_booleano
   45                   | termino_booleano . $@7 OR $@8 termino_booleano
   46                   | termino_booleano .

    OR        reduce usando la regla 43 ($@7)
    PAR_C     reduce usando la regla 46 (expresion_booleana)
    $default  reduce usando la regla 40 ($@5)

    $@5  ir al estado 69
    $@7  ir al estado 70


estado 44

   48 expresion_booleana: between .

    $default  reduce usando la regla 48 (expresion_booleana)


estado 45

   30 factor: take .

    $default  reduce usando la regla 30 (factor)


estado 46

    3 bloque_variables: bloque_variables listavar OP_TIPO . tipodato

    INTEGER  desplazar e ir al estado 47
    FLOAT    desplazar e ir al estado 48
    STRING   desplazar e ir al estado 49

    tipodato  ir al estado 71


estado 47

    7 tipodato: INTEGER .

    $default  reduce usando la regla 7 (tipodato)


estado 48

    8 tipodato: FLOAT .

    $default  reduce usando la regla 8 (tipodato)


estado 49

    9 tipodato: STRING .

    $default  reduce usando la regla 9 (tipodato)


estado 50

    4 bloque_variables: listavar OP_TIPO tipodato .

    $default  reduce usando la regla 4 (bloque_variables)


estado 51

    6 listavar: listavar COMA ID .

    $default  reduce usando la regla 6 (listavar)


estado 52

   33 iteracion: WHILE $@1 PAR_A . expresion_booleana PAR_C THEN $@2 programa ENDWHILE

    TAKE        desplazar e ir al estado 32
    BETWEEN     desplazar e ir al estado 33
    NOT         desplazar e ir al estado 34
    PAR_A       desplazar e ir al estado 35
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion           ir al estado 39
    termino             ir al estado 40
    factor              ir al estado 41
    expresion_booleana  ir al estado 72
    termino_booleano    ir al estado 43
    between             ir al estado 44
    take                ir al estado 45


estado 53

   26 factor: PAR_A . expresion PAR_C

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion  ir al estado 73
    termino    ir al estado 40
    factor     ir al estado 41
    take       ir al estado 45


estado 54

   18 expresion_general: CONST_STR .

    $default  reduce usando la regla 18 (expresion_general)


estado 55

   17 asignacion: ID OP_ASIG expresion_general .

    $default  reduce usando la regla 17 (asignacion)


estado 56

   19 expresion_general: expresion .
   20 expresion: expresion . OP_SUM termino
   21          | expresion . OP_RES termino

    OP_RES  desplazar e ir al estado 62
    OP_SUM  desplazar e ir al estado 63

    $default  reduce usando la regla 19 (expresion_general)


estado 57

   65 take: TAKE PAR_A . operador_take PYC numeros_a_tomar PYC COR_A lista_take_ctes COR_C PAR_C
   66     | TAKE PAR_A . operador_take PYC numeros_a_tomar PYC COR_A COR_C PAR_C

    OP_RES  desplazar e ir al estado 74
    OP_SUM  desplazar e ir al estado 75
    OP_DIV  desplazar e ir al estado 76
    OP_MUL  desplazar e ir al estado 77

    operador_take  ir al estado 78


estado 58

   64 between: BETWEEN PAR_A . ID $@10 COMA COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C PAR_C

    ID  desplazar e ir al estado 79


estado 59

   47 expresion_booleana: NOT termino_booleano .

    $default  reduce usando la regla 47 (expresion_booleana)


estado 60

   20 expresion: expresion . OP_SUM termino
   21          | expresion . OP_RES termino
   26 factor: PAR_A expresion . PAR_C
   51 termino_booleano: expresion . $@9 comparador expresion

    OP_RES  desplazar e ir al estado 62
    OP_SUM  desplazar e ir al estado 63
    PAR_C   desplazar e ir al estado 80

    $default  reduce usando la regla 50 ($@9)

    $@9  ir al estado 64


estado 61

   49 termino_booleano: PAR_A expresion_booleana . PAR_C

    PAR_C  desplazar e ir al estado 81


estado 62

   21 expresion: expresion OP_RES . termino

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    termino  ir al estado 82
    factor   ir al estado 41
    take     ir al estado 45


estado 63

   20 expresion: expresion OP_SUM . termino

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    termino  ir al estado 83
    factor   ir al estado 41
    take     ir al estado 45


estado 64

   51 termino_booleano: expresion $@9 . comparador expresion

    OP_MAYOR        desplazar e ir al estado 84
    OP_MAYOR_IGUAL  desplazar e ir al estado 85
    OP_MENOR        desplazar e ir al estado 86
    OP_MENOR_IGUAL  desplazar e ir al estado 87
    OP_IGUAL        desplazar e ir al estado 88
    OP_NO_IGUAL     desplazar e ir al estado 89

    comparador  ir al estado 90


estado 65

   24 termino: termino OP_DIV . factor

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    factor  ir al estado 91
    take    ir al estado 45


estado 66

   23 termino: termino OP_MUL . factor

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    factor  ir al estado 92
    take    ir al estado 45


estado 67

   35 inicio_then: PAR_C . THEN

    THEN  desplazar e ir al estado 93


estado 68

   36 seleccion: inicio_if expresion_booleana inicio_then . programa ENDIF
   39          | inicio_if expresion_booleana inicio_then . programa $@3 ELSE $@4 programa ENDIF

    WHILE  desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WRITE  desplazar e ir al estado 10
    READ   desplazar e ir al estado 11
    ID     desplazar e ir al estado 12

    programa    ir al estado 94
    sentencia   ir al estado 14
    asignacion  ir al estado 15
    iteracion   ir al estado 16
    inicio_if   ir al estado 17
    seleccion   ir al estado 18
    entrada     ir al estado 19
    salida      ir al estado 20


estado 69

   42 expresion_booleana: termino_booleano $@5 . AND $@6 termino_booleano

    AND  desplazar e ir al estado 95


estado 70

   45 expresion_booleana: termino_booleano $@7 . OR $@8 termino_booleano

    OR  desplazar e ir al estado 96


estado 71

    3 bloque_variables: bloque_variables listavar OP_TIPO tipodato .

    $default  reduce usando la regla 3 (bloque_variables)


estado 72

   33 iteracion: WHILE $@1 PAR_A expresion_booleana . PAR_C THEN $@2 programa ENDWHILE

    PAR_C  desplazar e ir al estado 97


estado 73

   20 expresion: expresion . OP_SUM termino
   21          | expresion . OP_RES termino
   26 factor: PAR_A expresion . PAR_C

    OP_RES  desplazar e ir al estado 62
    OP_SUM  desplazar e ir al estado 63
    PAR_C   desplazar e ir al estado 80


estado 74

   70 operador_take: OP_RES .

    $default  reduce usando la regla 70 (operador_take)


estado 75

   67 operador_take: OP_SUM .

    $default  reduce usando la regla 67 (operador_take)


estado 76

   69 operador_take: OP_DIV .

    $default  reduce usando la regla 69 (operador_take)


estado 77

   68 operador_take: OP_MUL .

    $default  reduce usando la regla 68 (operador_take)


estado 78

   65 take: TAKE PAR_A operador_take . PYC numeros_a_tomar PYC COR_A lista_take_ctes COR_C PAR_C
   66     | TAKE PAR_A operador_take . PYC numeros_a_tomar PYC COR_A COR_C PAR_C

    PYC  desplazar e ir al estado 98


estado 79

   64 between: BETWEEN PAR_A ID . $@10 COMA COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C PAR_C

    $default  reduce usando la regla 63 ($@10)

    $@10  ir al estado 99


estado 80

   26 factor: PAR_A expresion PAR_C .

    $default  reduce usando la regla 26 (factor)


estado 81

   49 termino_booleano: PAR_A expresion_booleana PAR_C .

    $default  reduce usando la regla 49 (termino_booleano)


estado 82

   21 expresion: expresion OP_RES termino .
   23 termino: termino . OP_MUL factor
   24        | termino . OP_DIV factor

    OP_DIV  desplazar e ir al estado 65
    OP_MUL  desplazar e ir al estado 66

    $default  reduce usando la regla 21 (expresion)


estado 83

   20 expresion: expresion OP_SUM termino .
   23 termino: termino . OP_MUL factor
   24        | termino . OP_DIV factor

    OP_DIV  desplazar e ir al estado 65
    OP_MUL  desplazar e ir al estado 66

    $default  reduce usando la regla 20 (expresion)


estado 84

   52 comparador: OP_MAYOR .

    $default  reduce usando la regla 52 (comparador)


estado 85

   55 comparador: OP_MAYOR_IGUAL .

    $default  reduce usando la regla 55 (comparador)


estado 86

   53 comparador: OP_MENOR .

    $default  reduce usando la regla 53 (comparador)


estado 87

   54 comparador: OP_MENOR_IGUAL .

    $default  reduce usando la regla 54 (comparador)


estado 88

   56 comparador: OP_IGUAL .

    $default  reduce usando la regla 56 (comparador)


estado 89

   57 comparador: OP_NO_IGUAL .

    $default  reduce usando la regla 57 (comparador)


estado 90

   51 termino_booleano: expresion $@9 comparador . expresion

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion  ir al estado 100
    termino    ir al estado 40
    factor     ir al estado 41
    take       ir al estado 45


estado 91

   24 termino: termino OP_DIV factor .

    $default  reduce usando la regla 24 (termino)


estado 92

   23 termino: termino OP_MUL factor .

    $default  reduce usando la regla 23 (termino)


estado 93

   35 inicio_then: PAR_C THEN .

    $default  reduce usando la regla 35 (inicio_then)


estado 94

   11 programa: programa . sentencia
   36 seleccion: inicio_if expresion_booleana inicio_then programa . ENDIF
   39          | inicio_if expresion_booleana inicio_then programa . $@3 ELSE $@4 programa ENDIF

    WHILE  desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WRITE  desplazar e ir al estado 10
    READ   desplazar e ir al estado 11
    ENDIF  desplazar e ir al estado 101
    ID     desplazar e ir al estado 12

    $default  reduce usando la regla 37 ($@3)

    sentencia   ir al estado 31
    asignacion  ir al estado 15
    iteracion   ir al estado 16
    inicio_if   ir al estado 17
    seleccion   ir al estado 18
    $@3         ir al estado 102
    entrada     ir al estado 19
    salida      ir al estado 20


estado 95

   42 expresion_booleana: termino_booleano $@5 AND . $@6 termino_booleano

    $default  reduce usando la regla 41 ($@6)

    $@6  ir al estado 103


estado 96

   45 expresion_booleana: termino_booleano $@7 OR . $@8 termino_booleano

    $default  reduce usando la regla 44 ($@8)

    $@8  ir al estado 104


estado 97

   33 iteracion: WHILE $@1 PAR_A expresion_booleana PAR_C . THEN $@2 programa ENDWHILE

    THEN  desplazar e ir al estado 105


estado 98

   65 take: TAKE PAR_A operador_take PYC . numeros_a_tomar PYC COR_A lista_take_ctes COR_C PAR_C
   66     | TAKE PAR_A operador_take PYC . numeros_a_tomar PYC COR_A COR_C PAR_C

    CONST_ENT  desplazar e ir al estado 106

    numeros_a_tomar  ir al estado 107


estado 99

   64 between: BETWEEN PAR_A ID $@10 . COMA COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C PAR_C

    COMA  desplazar e ir al estado 108


estado 100

   20 expresion: expresion . OP_SUM termino
   21          | expresion . OP_RES termino
   51 termino_booleano: expresion $@9 comparador expresion .

    OP_RES  desplazar e ir al estado 62
    OP_SUM  desplazar e ir al estado 63

    $default  reduce usando la regla 51 (termino_booleano)


estado 101

   36 seleccion: inicio_if expresion_booleana inicio_then programa ENDIF .

    $default  reduce usando la regla 36 (seleccion)


estado 102

   39 seleccion: inicio_if expresion_booleana inicio_then programa $@3 . ELSE $@4 programa ENDIF

    ELSE  desplazar e ir al estado 109


estado 103

   42 expresion_booleana: termino_booleano $@5 AND $@6 . termino_booleano

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 35
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion         ir al estado 39
    termino           ir al estado 40
    factor            ir al estado 41
    termino_booleano  ir al estado 110
    take              ir al estado 45


estado 104

   45 expresion_booleana: termino_booleano $@7 OR $@8 . termino_booleano

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 35
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion         ir al estado 39
    termino           ir al estado 40
    factor            ir al estado 41
    termino_booleano  ir al estado 111
    take              ir al estado 45


estado 105

   33 iteracion: WHILE $@1 PAR_A expresion_booleana PAR_C THEN . $@2 programa ENDWHILE

    $default  reduce usando la regla 32 ($@2)

    $@2  ir al estado 112


estado 106

   71 numeros_a_tomar: CONST_ENT .

    $default  reduce usando la regla 71 (numeros_a_tomar)


estado 107

   65 take: TAKE PAR_A operador_take PYC numeros_a_tomar . PYC COR_A lista_take_ctes COR_C PAR_C
   66     | TAKE PAR_A operador_take PYC numeros_a_tomar . PYC COR_A COR_C PAR_C

    PYC  desplazar e ir al estado 113


estado 108

   64 between: BETWEEN PAR_A ID $@10 COMA . COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C PAR_C

    COR_A  desplazar e ir al estado 114


estado 109

   39 seleccion: inicio_if expresion_booleana inicio_then programa $@3 ELSE . $@4 programa ENDIF

    $default  reduce usando la regla 38 ($@4)

    $@4  ir al estado 115


estado 110

   42 expresion_booleana: termino_booleano $@5 AND $@6 termino_booleano .

    $default  reduce usando la regla 42 (expresion_booleana)


estado 111

   45 expresion_booleana: termino_booleano $@7 OR $@8 termino_booleano .

    $default  reduce usando la regla 45 (expresion_booleana)


estado 112

   33 iteracion: WHILE $@1 PAR_A expresion_booleana PAR_C THEN $@2 . programa ENDWHILE

    WHILE  desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WRITE  desplazar e ir al estado 10
    READ   desplazar e ir al estado 11
    ID     desplazar e ir al estado 12

    programa    ir al estado 116
    sentencia   ir al estado 14
    asignacion  ir al estado 15
    iteracion   ir al estado 16
    inicio_if   ir al estado 17
    seleccion   ir al estado 18
    entrada     ir al estado 19
    salida      ir al estado 20


estado 113

   65 take: TAKE PAR_A operador_take PYC numeros_a_tomar PYC . COR_A lista_take_ctes COR_C PAR_C
   66     | TAKE PAR_A operador_take PYC numeros_a_tomar PYC . COR_A COR_C PAR_C

    COR_A  desplazar e ir al estado 117


estado 114

   64 between: BETWEEN PAR_A ID $@10 COMA COR_A . funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C PAR_C

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion                        ir al estado 118
    termino                          ir al estado 40
    factor                           ir al estado 41
    funcion_expresion_cota_inferior  ir al estado 119
    take                             ir al estado 45


estado 115

   39 seleccion: inicio_if expresion_booleana inicio_then programa $@3 ELSE $@4 . programa ENDIF

    WHILE  desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WRITE  desplazar e ir al estado 10
    READ   desplazar e ir al estado 11
    ID     desplazar e ir al estado 12

    programa    ir al estado 120
    sentencia   ir al estado 14
    asignacion  ir al estado 15
    iteracion   ir al estado 16
    inicio_if   ir al estado 17
    seleccion   ir al estado 18
    entrada     ir al estado 19
    salida      ir al estado 20


estado 116

   11 programa: programa . sentencia
   33 iteracion: WHILE $@1 PAR_A expresion_booleana PAR_C THEN $@2 programa . ENDWHILE

    WHILE     desplazar e ir al estado 8
    IF        desplazar e ir al estado 9
    WRITE     desplazar e ir al estado 10
    READ      desplazar e ir al estado 11
    ENDWHILE  desplazar e ir al estado 121
    ID        desplazar e ir al estado 12

    sentencia   ir al estado 31
    asignacion  ir al estado 15
    iteracion   ir al estado 16
    inicio_if   ir al estado 17
    seleccion   ir al estado 18
    entrada     ir al estado 19
    salida      ir al estado 20


estado 117

   65 take: TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A . lista_take_ctes COR_C PAR_C
   66     | TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A . COR_C PAR_C

    COR_C      desplazar e ir al estado 122
    CONST_ENT  desplazar e ir al estado 123

    lista_take_ctes  ir al estado 124


estado 118

   20 expresion: expresion . OP_SUM termino
   21          | expresion . OP_RES termino
   61 funcion_expresion_cota_inferior: expresion .

    OP_RES  desplazar e ir al estado 62
    OP_SUM  desplazar e ir al estado 63

    $default  reduce usando la regla 61 (funcion_expresion_cota_inferior)


estado 119

   64 between: BETWEEN PAR_A ID $@10 COMA COR_A funcion_expresion_cota_inferior . PYC funcion_expresion_cota_superior COR_C PAR_C

    PYC  desplazar e ir al estado 125


estado 120

   11 programa: programa . sentencia
   39 seleccion: inicio_if expresion_booleana inicio_then programa $@3 ELSE $@4 programa . ENDIF

    WHILE  desplazar e ir al estado 8
    IF     desplazar e ir al estado 9
    WRITE  desplazar e ir al estado 10
    READ   desplazar e ir al estado 11
    ENDIF  desplazar e ir al estado 126
    ID     desplazar e ir al estado 12

    sentencia   ir al estado 31
    asignacion  ir al estado 15
    iteracion   ir al estado 16
    inicio_if   ir al estado 17
    seleccion   ir al estado 18
    entrada     ir al estado 19
    salida      ir al estado 20


estado 121

   33 iteracion: WHILE $@1 PAR_A expresion_booleana PAR_C THEN $@2 programa ENDWHILE .

    $default  reduce usando la regla 33 (iteracion)


estado 122

   66 take: TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A COR_C . PAR_C

    PAR_C  desplazar e ir al estado 127


estado 123

   72 lista_take_ctes: CONST_ENT .

    $default  reduce usando la regla 72 (lista_take_ctes)


estado 124

   65 take: TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A lista_take_ctes . COR_C PAR_C
   73 lista_take_ctes: lista_take_ctes . PYC CONST_ENT

    COR_C  desplazar e ir al estado 128
    PYC    desplazar e ir al estado 129


estado 125

   64 between: BETWEEN PAR_A ID $@10 COMA COR_A funcion_expresion_cota_inferior PYC . funcion_expresion_cota_superior COR_C PAR_C

    TAKE        desplazar e ir al estado 32
    PAR_A       desplazar e ir al estado 53
    ID          desplazar e ir al estado 36
    CONST_ENT   desplazar e ir al estado 37
    CONST_REAL  desplazar e ir al estado 38

    expresion                        ir al estado 130
    termino                          ir al estado 40
    factor                           ir al estado 41
    funcion_expresion_cota_superior  ir al estado 131
    take                             ir al estado 45


estado 126

   39 seleccion: inicio_if expresion_booleana inicio_then programa $@3 ELSE $@4 programa ENDIF .

    $default  reduce usando la regla 39 (seleccion)


estado 127

   66 take: TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A COR_C PAR_C .

    $default  reduce usando la regla 66 (take)


estado 128

   65 take: TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A lista_take_ctes COR_C . PAR_C

    PAR_C  desplazar e ir al estado 132


estado 129

   73 lista_take_ctes: lista_take_ctes PYC . CONST_ENT

    CONST_ENT  desplazar e ir al estado 133


estado 130

   20 expresion: expresion . OP_SUM termino
   21          | expresion . OP_RES termino
   62 funcion_expresion_cota_superior: expresion .

    OP_RES  desplazar e ir al estado 62
    OP_SUM  desplazar e ir al estado 63

    $default  reduce usando la regla 62 (funcion_expresion_cota_superior)


estado 131

   64 between: BETWEEN PAR_A ID $@10 COMA COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior . COR_C PAR_C

    COR_C  desplazar e ir al estado 134


estado 132

   65 take: TAKE PAR_A operador_take PYC numeros_a_tomar PYC COR_A lista_take_ctes COR_C PAR_C .

    $default  reduce usando la regla 65 (take)


estado 133

   73 lista_take_ctes: lista_take_ctes PYC CONST_ENT .

    $default  reduce usando la regla 73 (lista_take_ctes)


estado 134

   64 between: BETWEEN PAR_A ID $@10 COMA COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C . PAR_C

    PAR_C  desplazar e ir al estado 135


estado 135

   64 between: BETWEEN PAR_A ID $@10 COMA COR_A funcion_expresion_cota_inferior PYC funcion_expresion_cota_superior COR_C PAR_C .

    $default  reduce usando la regla 64 (between)
